{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// ...\nexport class OrcamentosService {\n  constructor(http) {\n    this.http = http;\n    this.api = environment.apiUrl + 'Orcamentos';\n  }\n  csrfHeaders() {\n    let token = localStorage.getItem('csrf');\n    if (!token) {\n      token = crypto.randomUUID();\n      localStorage.setItem('csrf', token);\n    }\n    return new HttpHeaders({\n      'X-CSRF-TOKEN': token\n    });\n  }\n  criar(body) {\n    return this.http.post(`${this.api}/Criar`, body, {\n      withCredentials: true,\n      headers: this.csrfHeaders()\n    });\n  }\n  gerarPDF(slug) {\n    return this.http.get(`${this.api}/GerarPDF/${encodeURIComponent(slug)}`, {\n      responseType: 'blob',\n      withCredentials: true\n    });\n  }\n  getBySlug(slug) {\n    return this.http.get(`${this.api}/Publico/${encodeURIComponent(slug)}`, {\n      withCredentials: true\n    });\n  }\n  listMine() {\n    return this.http.get(`${this.api}/Meus`, {\n      withCredentials: true\n    });\n  }\n  calcularFrete(body) {\n    return this.http.post(`${this.api}/CalcularFrete`, body, {\n      withCredentials: true,\n      headers: this.csrfHeaders()\n    });\n  }\n  compararPrecos(payload) {\n    return this.http.post(`${this.api}/CompararPrecos`, payload);\n  }\n  static {\n    this.ɵfac = function OrcamentosService_Factory(t) {\n      return new (t || OrcamentosService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrcamentosService,\n      factory: OrcamentosService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","OrcamentosService","constructor","http","api","apiUrl","csrfHeaders","token","localStorage","getItem","crypto","randomUUID","setItem","criar","body","post","withCredentials","headers","gerarPDF","slug","get","encodeURIComponent","responseType","getBySlug","listMine","calcularFrete","compararPrecos","payload","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\services\\orcamentos.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {CalcularFreteRequest, CriarOrcamentoResponse, FreteQuote, OrcamentoDetalhe, OrcamentoListaItem, OrcamentoPayload } from '../models/orcamento.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n// ...\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrcamentosService {\r\n    private api = environment.apiUrl + 'Orcamentos';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    private csrfHeaders(): HttpHeaders {\r\n        let token = localStorage.getItem('csrf');\r\n        if (!token) { token = crypto.randomUUID(); localStorage.setItem('csrf', token); }\r\n        return new HttpHeaders({ 'X-CSRF-TOKEN': token });\r\n    }\r\n\r\n    criar(body: OrcamentoPayload) {\r\n        return this.http.post<CriarOrcamentoResponse>(\r\n            `${this.api}/Criar`,\r\n            body,\r\n            { withCredentials: true, headers: this.csrfHeaders() }\r\n        );\r\n    }\r\n\r\n    gerarPDF(slug: string) {\r\n        return this.http.get(\r\n            `${this.api}/GerarPDF/${encodeURIComponent(slug)}`,\r\n            { responseType: 'blob' as const , withCredentials: true }\r\n        );\r\n    }\r\n\r\n    getBySlug(slug: string) {\r\n        return this.http.get<OrcamentoDetalhe>(\r\n            `${this.api}/Publico/${encodeURIComponent(slug)}`,\r\n            { withCredentials: true }\r\n        );\r\n    }\r\n\r\n    listMine() {\r\n        return this.http.get<OrcamentoListaItem[]>(\r\n            `${this.api}/Meus`,\r\n            { withCredentials: true }\r\n        );\r\n    }\r\n\r\n    calcularFrete(body: CalcularFreteRequest) {\r\n        return this.http.post<FreteQuote>(\r\n            `${this.api}/CalcularFrete`,\r\n            body,\r\n            { withCredentials: true, headers: this.csrfHeaders() }\r\n        );\r\n    }\r\n\r\n    compararPrecos(payload: { categoria: string; modelo: string }) {\r\n        return this.http.post<{\r\n            newPriceAvg: number | null;\r\n            usedPriceAvg: number | null;\r\n            priceMin: number | null;\r\n            priceMax: number | null;\r\n            newSites: { site: string; valor: number; qtd: number }[];\r\n            usedSites: { site: string; valor: number; qtd: number }[];\r\n            newPriceSources: string[];\r\n            usedPriceSources: string[];\r\n        }>(`${this.api}/CompararPrecos`, payload);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAC1D;AAGA,OAAM,MAAOC,iBAAiB;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAGJ,WAAW,CAACK,MAAM,GAAG,YAAY;EAER;EAE/BC,WAAWA,CAAA;IACf,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACxC,IAAI,CAACF,KAAK,EAAE;MAAEA,KAAK,GAAGG,MAAM,CAACC,UAAU,EAAE;MAAEH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEL,KAAK,CAAC;IAAE;IAChF,OAAO,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAEQ;IAAK,CAAE,CAAC;EACrD;EAEAM,KAAKA,CAACC,IAAsB;IACxB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CACjB,GAAG,IAAI,CAACX,GAAG,QAAQ,EACnBU,IAAI,EACJ;MAAEE,eAAe,EAAE,IAAI;MAAEC,OAAO,EAAE,IAAI,CAACX,WAAW;IAAE,CAAE,CACzD;EACL;EAEAY,QAAQA,CAACC,IAAY;IACjB,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAChB,GAAG,IAAI,CAAChB,GAAG,aAAaiB,kBAAkB,CAACF,IAAI,CAAC,EAAE,EAClD;MAAEG,YAAY,EAAE,MAAe;MAAGN,eAAe,EAAE;IAAI,CAAE,CAC5D;EACL;EAEAO,SAASA,CAACJ,IAAY;IAClB,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAChB,GAAG,IAAI,CAAChB,GAAG,YAAYiB,kBAAkB,CAACF,IAAI,CAAC,EAAE,EACjD;MAAEH,eAAe,EAAE;IAAI,CAAE,CAC5B;EACL;EAEAQ,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACrB,IAAI,CAACiB,GAAG,CAChB,GAAG,IAAI,CAAChB,GAAG,OAAO,EAClB;MAAEY,eAAe,EAAE;IAAI,CAAE,CAC5B;EACL;EAEAS,aAAaA,CAACX,IAA0B;IACpC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CACjB,GAAG,IAAI,CAACX,GAAG,gBAAgB,EAC3BU,IAAI,EACJ;MAAEE,eAAe,EAAE,IAAI;MAAEC,OAAO,EAAE,IAAI,CAACX,WAAW;IAAE,CAAE,CACzD;EACL;EAEAoB,cAAcA,CAACC,OAA8C;IACzD,OAAO,IAAI,CAACxB,IAAI,CAACY,IAAI,CASlB,GAAG,IAAI,CAACX,GAAG,iBAAiB,EAAEuB,OAAO,CAAC;EAC7C;;;uBA3DS1B,iBAAiB,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAjB9B,iBAAiB;MAAA+B,OAAA,EAAjB/B,iBAAiB,CAAAgC,IAAA;MAAAC,UAAA,EADJ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}