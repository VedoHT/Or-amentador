{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loading.service\";\nexport class LoadingInterceptor {\n  constructor(loading) {\n    this.loading = loading;\n    this.ignore = [/\\/assets\\//, /\\/health$/];\n  }\n  intercept(req, next) {\n    const skip = this.ignore.some(p => typeof p === 'string' ? req.url.includes(p) : p.test(req.url));\n    if (!skip) this.loading.start();\n    return next.handle(req).pipe(finalize(() => {\n      if (!skip) this.loading.stop();\n    }));\n  }\n  static {\n    this.ɵfac = function LoadingInterceptor_Factory(t) {\n      return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.LoadingService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["finalize","LoadingInterceptor","constructor","loading","ignore","intercept","req","next","skip","some","p","url","includes","test","start","handle","pipe","stop","i0","ɵɵinject","i1","LoadingService","factory","ɵfac"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LoadingService } from '../services/loading.service';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n    private readonly ignore: (string | RegExp)[] = [\r\n        /\\/assets\\//,\r\n        /\\/health$/,\r\n    ];\r\n\r\n    constructor(private loading: LoadingService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const skip = this.ignore.some((p) => typeof p === 'string' ? req.url.includes(p) : p.test(req.url));\r\n        if (!skip) this.loading.start();\r\n        return next.handle(req).pipe(finalize(() => { if (!skip) this.loading.stop(); }));\r\n    }\r\n}\r\n"],"mappings":"AAGA,SAASA,QAAQ,QAAQ,gBAAgB;;;AAIzC,OAAM,MAAOC,kBAAkB;EAM3BC,YAAoBC,OAAuB;IAAvB,KAAAA,OAAO,GAAPA,OAAO;IALV,KAAAC,MAAM,GAAwB,CAC3C,YAAY,EACZ,WAAW,CACd;EAE6C;EAE9CC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,IAAI,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAEC,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,GAAGJ,GAAG,CAACK,GAAG,CAACC,QAAQ,CAACF,CAAC,CAAC,GAAGA,CAAC,CAACG,IAAI,CAACP,GAAG,CAACK,GAAG,CAAC,CAAC;IACnG,IAAI,CAACH,IAAI,EAAE,IAAI,CAACL,OAAO,CAACW,KAAK,EAAE;IAC/B,OAAOP,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC,CAACU,IAAI,CAAChB,QAAQ,CAAC,MAAK;MAAG,IAAI,CAACQ,IAAI,EAAE,IAAI,CAACL,OAAO,CAACc,IAAI,EAAE;IAAE,CAAC,CAAC,CAAC;EACrF;;;uBAZShB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAlBpB,kBAAkB;MAAAqB,OAAA,EAAlBrB,kBAAkB,CAAAsB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}