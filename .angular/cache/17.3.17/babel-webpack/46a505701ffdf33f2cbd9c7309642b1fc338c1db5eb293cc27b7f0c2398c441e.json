{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  if (auth.isLoggedIn()) return true;\n  // se não estiver logado, manda pro /login e guarda a URL desejada\n  return router.createUrlTree(['/login'], {\n    queryParams: {\n      redirect: state.url\n    }\n  });\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","auth","router","isLoggedIn","createUrlTree","queryParams","redirect","url"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n    const auth = inject(AuthService);\r\n    const router = inject(Router);\r\n\r\n    if (auth.isLoggedIn()) return true;\r\n\r\n    // se não estiver logado, manda pro /login e guarda a URL desejada\r\n    return router.createUrlTree(['/login'], { queryParams: { redirect: state.url } });\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACrD,MAAMC,IAAI,GAAGN,MAAM,CAACE,WAAW,CAAC;EAChC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAIK,IAAI,CAACE,UAAU,EAAE,EAAE,OAAO,IAAI;EAElC;EACA,OAAOD,MAAM,CAACE,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE;IAAEC,WAAW,EAAE;MAAEC,QAAQ,EAAEN,KAAK,CAACO;IAAG;EAAE,CAAE,CAAC;AACrF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}