{"ast":null,"code":"import { BehaviorSubject, timer } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class LoadingService {\n  constructor() {\n    this.activeCount = 0;\n    this.active$ = new BehaviorSubject(0);\n    this.showDelayMs = 150; // evita flicker\n    this.minVisibleMs = 300; // tempo mínimo visível\n    this.isLoading$ = this.active$.pipe(map(n => n > 0), distinctUntilChanged(), switchMap(is => is ? timer(this.showDelayMs).pipe(map(() => true)) : timer(this.minVisibleMs).pipe(map(() => false))), distinctUntilChanged());\n  }\n  start() {\n    this.activeCount++;\n    this.active$.next(this.activeCount);\n  }\n  stop() {\n    this.activeCount = Math.max(0, this.activeCount - 1);\n    this.active$.next(this.activeCount);\n  }\n  static {\n    this.ɵfac = function LoadingService_Factory(t) {\n      return new (t || LoadingService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingService,\n      factory: LoadingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","timer","distinctUntilChanged","map","switchMap","LoadingService","constructor","activeCount","active$","showDelayMs","minVisibleMs","isLoading$","pipe","n","is","start","next","stop","Math","max","factory","ɵfac","providedIn"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\services\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, timer } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoadingService {\r\n    private activeCount = 0;\r\n    private active$ = new BehaviorSubject<number>(0);\r\n\r\n    private showDelayMs = 150;   // evita flicker\r\n    private minVisibleMs = 300;  // tempo mínimo visível\r\n\r\n    readonly isLoading$: Observable<boolean> = this.active$.pipe(\r\n        map((n) => n > 0),\r\n        distinctUntilChanged(),\r\n        switchMap((is) => is ? timer(this.showDelayMs).pipe(map(() => true))\r\n            : timer(this.minVisibleMs).pipe(map(() => false))),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    start() { this.activeCount++; this.active$.next(this.activeCount); }\r\n    stop()  { this.activeCount = Math.max(0, this.activeCount - 1); this.active$.next(this.activeCount); }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,KAAK,QAAQ,MAAM;AACzD,SAASC,oBAAoB,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;;AAGrE,OAAM,MAAOC,cAAc;EAD3BC,YAAA;IAEY,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,OAAO,GAAG,IAAIR,eAAe,CAAS,CAAC,CAAC;IAExC,KAAAS,WAAW,GAAG,GAAG,CAAC,CAAG;IACrB,KAAAC,YAAY,GAAG,GAAG,CAAC,CAAE;IAEpB,KAAAC,UAAU,GAAwB,IAAI,CAACH,OAAO,CAACI,IAAI,CACxDT,GAAG,CAAEU,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,EACjBX,oBAAoB,EAAE,EACtBE,SAAS,CAAEU,EAAE,IAAKA,EAAE,GAAGb,KAAK,CAAC,IAAI,CAACQ,WAAW,CAAC,CAACG,IAAI,CAACT,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,GAC9DF,KAAK,CAAC,IAAI,CAACS,YAAY,CAAC,CAACE,IAAI,CAACT,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,EACtDD,oBAAoB,EAAE,CACzB;;EAEDa,KAAKA,CAAA;IAAK,IAAI,CAACR,WAAW,EAAE;IAAE,IAAI,CAACC,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACT,WAAW,CAAC;EAAE;EACnEU,IAAIA,CAAA;IAAM,IAAI,CAACV,WAAW,GAAGW,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACZ,WAAW,GAAG,CAAC,CAAC;IAAE,IAAI,CAACC,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACT,WAAW,CAAC;EAAE;;;uBAhB5FF,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;MAAAC,UAAA,EADD;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}