{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ApiInterceptor {\n  intercept(req, next) {\n    const isUnsafe = ['POST', 'PUT', 'DELETE'].includes(req.method);\n    let clone = req.clone({\n      withCredentials: true\n    });\n    if (isUnsafe) {\n      let token = localStorage.getItem('csrf');\n      if (!token) {\n        token = crypto.randomUUID();\n        localStorage.setItem('csrf', token);\n      }\n      clone = clone.clone({\n        setHeaders: {\n          'X-CSRF-TOKEN': token\n        }\n      });\n    }\n    return next.handle(clone);\n  }\n  static {\n    this.ɵfac = function ApiInterceptor_Factory(t) {\n      return new (t || ApiInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiInterceptor,\n      factory: ApiInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["ApiInterceptor","intercept","req","next","isUnsafe","includes","method","clone","withCredentials","token","localStorage","getItem","crypto","randomUUID","setItem","setHeaders","handle","factory","ɵfac"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\interceptors\\api.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const isUnsafe = ['POST', 'PUT', 'DELETE'].includes(req.method);\r\n\r\n        let clone = req.clone({ withCredentials: true });\r\n\r\n        if (isUnsafe) {\r\n            let token = localStorage.getItem('csrf');\r\n            if (!token) { token = crypto.randomUUID(); localStorage.setItem('csrf', token); }\r\n            clone = clone.clone({ setHeaders: { 'X-CSRF-TOKEN': token } });\r\n        }\r\n\r\n        return next.handle(clone);\r\n    }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EACvBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACH,GAAG,CAACI,MAAM,CAAC;IAE/D,IAAIC,KAAK,GAAGL,GAAG,CAACK,KAAK,CAAC;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;IAEhD,IAAIJ,QAAQ,EAAE;MACV,IAAIK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACxC,IAAI,CAACF,KAAK,EAAE;QAAEA,KAAK,GAAGG,MAAM,CAACC,UAAU,EAAE;QAAEH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEL,KAAK,CAAC;MAAE;MAChFF,KAAK,GAAGA,KAAK,CAACA,KAAK,CAAC;QAAEQ,UAAU,EAAE;UAAE,cAAc,EAAEN;QAAK;MAAE,CAAE,CAAC;IAClE;IAEA,OAAON,IAAI,CAACa,MAAM,CAACT,KAAK,CAAC;EAC7B;;;uBAbSP,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAiB,OAAA,EAAdjB,cAAc,CAAAkB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}