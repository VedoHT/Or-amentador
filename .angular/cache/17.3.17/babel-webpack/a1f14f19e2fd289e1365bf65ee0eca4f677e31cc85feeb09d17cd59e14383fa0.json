{"ast":null,"code":"import { RouterLink, RouterOutlet } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nfunction AppComponent_a_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"a\", 10);\n    i0.…µ…µtext(1, \"Meus Or\\u00E7amentos\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction AppComponent_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"a\", 11);\n    i0.…µ…µtext(1, \"Login\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction AppComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"button\", 12);\n    i0.…µ…µlistener(\"click\", function AppComponent_button_9_Template_button_click_0_listener() {\n      i0.…µ…µrestoreView(_r1);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.logout());\n    });\n    i0.…µ…µtext(1, \"Sair\");\n    i0.…µ…µelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(auth) {\n    this.auth = auth;\n    this.theme = 'dark';\n  }\n  ngOnInit() {\n    const saved = localStorage.getItem('theme');\n    if (saved) {\n      this.applyTheme(saved);\n    } else {\n      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.applyTheme(prefersDark ? 'dark' : 'light');\n    }\n  }\n  toggleTheme() {\n    this.applyTheme(this.theme === 'dark' ? 'light' : 'dark');\n  }\n  logout() {\n    this.auth.logout();\n  }\n  applyTheme(t) {\n    this.theme = t;\n    document.documentElement.setAttribute('data-theme', t);\n    localStorage.setItem('theme', t);\n  }\n  static {\n    this.…µfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.…µ…µdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      standalone: true,\n      features: [i0.…µ…µStandaloneFeature],\n      decls: 16,\n      vars: 4,\n      consts: [[1, \"header\"], [\"routerLink\", \"/\", \"aria-label\", \"Ir para in\\u00EDcio\", 1, \"brand\"], [1, \"brand-badge\"], [1, \"nav-right\"], [\"routerLink\", \"/meus\", \"class\", \"nav-link\", 4, \"ngIf\"], [\"routerLink\", \"/login\", \"class\", \"nav-link\", 4, \"ngIf\"], [\"class\", \"nav-link\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/novo\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-ghost\", 3, \"click\"], [1, \"container\", \"grid\"], [\"routerLink\", \"/meus\", 1, \"nav-link\"], [\"routerLink\", \"/login\", 1, \"nav-link\"], [1, \"nav-link\", 3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"header\", 0)(1, \"a\", 1)(2, \"span\", 2);\n          i0.…µ…µtext(3, \"\\uD83D\\uDEE0\\uFE0F\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(4, \"span\");\n          i0.…µ…µtext(5, \"Or\\u00E7amento por Partes\");\n          i0.…µ…µelementEnd()();\n          i0.…µ…µelementStart(6, \"nav\", 3);\n          i0.…µ…µtemplate(7, AppComponent_a_7_Template, 2, 0, \"a\", 4)(8, AppComponent_a_8_Template, 2, 0, \"a\", 5)(9, AppComponent_button_9_Template, 2, 0, \"button\", 6);\n          i0.…µ…µelementStart(10, \"a\", 7);\n          i0.…µ…µtext(11, \"Novo Or\\u00E7amento\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(12, \"button\", 8);\n          i0.…µ…µlistener(\"click\", function AppComponent_Template_button_click_12_listener() {\n            return ctx.toggleTheme();\n          });\n          i0.…µ…µtext(13);\n          i0.…µ…µelementEnd()()();\n          i0.…µ…µelementStart(14, \"main\", 9);\n          i0.…µ…µelement(15, \"router-outlet\");\n          i0.…µ…µelementEnd();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(7);\n          i0.…µ…µproperty(\"ngIf\", ctx.auth.isLoggedIn());\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", !ctx.auth.isLoggedIn());\n          i0.…µ…µadvance();\n          i0.…µ…µproperty(\"ngIf\", ctx.auth.isLoggedIn());\n          i0.…µ…µadvance(4);\n          i0.…µ…µtextInterpolate1(\" \", ctx.theme === \"dark\" ? \"Tema claro\" : \"Tema escuro\", \" \");\n        }\n      },\n      dependencies: [RouterOutlet, RouterLink],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["RouterLink","RouterOutlet","i0","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µlistener","AppComponent_button_9_Template_button_click_0_listener","…µ…µrestoreView","_r1","ctx_r1","…µ…µnextContext","…µ…µresetView","logout","AppComponent","constructor","auth","theme","ngOnInit","saved","localStorage","getItem","applyTheme","prefersDark","window","matchMedia","matches","toggleTheme","t","document","documentElement","setAttribute","setItem","…µ…µdirectiveInject","i1","AuthService","selectors","standalone","features","…µ…µStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","…µ…µtemplate","AppComponent_a_7_Template","AppComponent_a_8_Template","AppComponent_button_9_Template","AppComponent_Template_button_click_12_listener","…µ…µelement","…µ…µadvance","…µ…µproperty","isLoggedIn","…µ…µtextInterpolate1","encapsulation"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\ntype Theme = 'light' | 'dark';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, RouterLink],\n  template: `\n    <header class=\"header\">\n      <a routerLink=\"/\" class=\"brand\" aria-label=\"Ir para in√≠cio\">\n        <span class=\"brand-badge\">üõ†Ô∏è</span>\n        <span>Or√ßamento por Partes</span>\n      </a>\n\n      <nav class=\"nav-right\">\n        <!-- Meus Or√ßamentos s√≥ se logado -->\n        <a *ngIf=\"auth.isLoggedIn()\" routerLink=\"/meus\" class=\"nav-link\">Meus Or√ßamentos</a>\n\n        <!-- Login aparece se N√ÉO logado -->\n        <a *ngIf=\"!auth.isLoggedIn()\" routerLink=\"/login\" class=\"nav-link\">Login</a>\n\n        <!-- Logout aparece se logado -->\n        <button *ngIf=\"auth.isLoggedIn()\" class=\"nav-link\" (click)=\"logout()\">Sair</button>\n\n        <!-- Novo or√ßamento sempre -->\n        <a routerLink=\"/novo\" class=\"btn btn-primary\">Novo Or√ßamento</a>\n\n        <!-- Tema -->\n        <button class=\"btn btn-ghost\" (click)=\"toggleTheme()\">\n          {{ theme === 'dark' ? 'Tema claro' : 'Tema escuro' }}\n        </button>\n      </nav>\n    </header>\n\n    <main class=\"container grid\">\n      <router-outlet></router-outlet>\n    </main>\n  `\n})\nexport class AppComponent implements OnInit {\n  theme: Theme = 'dark';\n\n  constructor(public auth: AuthService) {}\n\n  ngOnInit() {\n    const saved = localStorage.getItem('theme') as Theme | null;\n    if (saved) {\n      this.applyTheme(saved);\n    } else {\n      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.applyTheme(prefersDark ? 'dark' : 'light');\n    }\n  }\n\n  toggleTheme() {\n    this.applyTheme(this.theme === 'dark' ? 'light' : 'dark');\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  private applyTheme(t: Theme) {\n    this.theme = t;\n    document.documentElement.setAttribute('data-theme', t);\n    localStorage.setItem('theme', t);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}