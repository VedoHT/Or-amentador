{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class QuoteService {\n  constructor() {\n    this.KEY = 'quotes_wizard';\n  }\n  list() {\n    const raw = localStorage.getItem(this.KEY);\n    return raw ? JSON.parse(raw) : [];\n  }\n  saveAll(arr) {\n    localStorage.setItem(this.KEY, JSON.stringify(arr));\n  }\n  makeSlug(len = 6) {\n    const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';\n    let s = '';\n    for (let i = 0; i < len; i++) s += chars[Math.floor(Math.random() * chars.length)];\n    return s;\n  }\n  create(input) {\n    let slug = this.makeSlug();\n    const current = this.list();\n    while (current.some(q => q.slug === slug)) slug = this.makeSlug();\n    const q = {\n      ...input,\n      slug,\n      createdAt: new Date().toISOString()\n    };\n    current.push(q);\n    this.saveAll(current);\n    return q;\n  }\n  getBySlug(slug) {\n    return this.list().find(q => q.slug === slug) ?? null;\n  }\n  all() {\n    return this.list().sort((a, b) => a.createdAt < b.createdAt ? 1 : -1);\n  }\n  static {\n    this.ɵfac = function QuoteService_Factory(t) {\n      return new (t || QuoteService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: QuoteService,\n      factory: QuoteService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["QuoteService","constructor","KEY","list","raw","localStorage","getItem","JSON","parse","saveAll","arr","setItem","stringify","makeSlug","len","chars","s","i","Math","floor","random","length","create","input","slug","current","some","q","createdAt","Date","toISOString","push","getBySlug","find","all","sort","a","b","factory","ɵfac","providedIn"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\services\\quote.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Quote, QuoteInput } from '../models';\n\n@Injectable({ providedIn: 'root' })\nexport class QuoteService {\n  private KEY = 'quotes_wizard';\n  private list(): Quote[] {\n    const raw = localStorage.getItem(this.KEY);\n    return raw ? JSON.parse(raw) : [];\n  }\n  private saveAll(arr: Quote[]) { localStorage.setItem(this.KEY, JSON.stringify(arr)); }\n  private makeSlug(len = 6): string {\n    const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';\n    let s = '';\n    for (let i=0;i<len;i++) s += chars[Math.floor(Math.random()*chars.length)];\n    return s;\n  }\n\n  create(input: QuoteInput): Quote {\n    let slug = this.makeSlug();\n    const current = this.list();\n    while (current.some(q => q.slug === slug)) slug = this.makeSlug();\n    const q: Quote = { ...input, slug, createdAt: new Date().toISOString() };\n    current.push(q);\n    this.saveAll(current);\n    return q;\n  }\n\n  getBySlug(slug: string): Quote | null { return this.list().find(q => q.slug === slug) ?? null; }\n  all(): Quote[] { return this.list().sort((a,b)=> (a.createdAt < b.createdAt ? 1 : -1)); }\n}\n"],"mappings":";AAIA,OAAM,MAAOA,YAAY;EADzBC,YAAA;IAEU,KAAAC,GAAG,GAAG,eAAe;;EACrBC,IAAIA,CAAA;IACV,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,GAAG,CAAC;IAC1C,OAAOE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAG,EAAE;EACnC;EACQK,OAAOA,CAACC,GAAY;IAAIL,YAAY,CAACM,OAAO,CAAC,IAAI,CAACT,GAAG,EAAEK,IAAI,CAACK,SAAS,CAACF,GAAG,CAAC,CAAC;EAAE;EAC7EG,QAAQA,CAACC,GAAG,GAAG,CAAC;IACtB,MAAMC,KAAK,GAAG,kCAAkC;IAChD,IAAIC,CAAC,GAAG,EAAE;IACV,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACH,GAAG,EAACG,CAAC,EAAE,EAAED,CAAC,IAAID,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACL,KAAK,CAACM,MAAM,CAAC,CAAC;IAC1E,OAAOL,CAAC;EACV;EAEAM,MAAMA,CAACC,KAAiB;IACtB,IAAIC,IAAI,GAAG,IAAI,CAACX,QAAQ,EAAE;IAC1B,MAAMY,OAAO,GAAG,IAAI,CAACtB,IAAI,EAAE;IAC3B,OAAOsB,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC,EAAEA,IAAI,GAAG,IAAI,CAACX,QAAQ,EAAE;IACjE,MAAMc,CAAC,GAAU;MAAE,GAAGJ,KAAK;MAAEC,IAAI;MAAEI,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;IAAE,CAAE;IACxEL,OAAO,CAACM,IAAI,CAACJ,CAAC,CAAC;IACf,IAAI,CAAClB,OAAO,CAACgB,OAAO,CAAC;IACrB,OAAOE,CAAC;EACV;EAEAK,SAASA,CAACR,IAAY;IAAkB,OAAO,IAAI,CAACrB,IAAI,EAAE,CAAC8B,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC,IAAI,IAAI;EAAE;EAC/FU,GAAGA,CAAA;IAAc,OAAO,IAAI,CAAC/B,IAAI,EAAE,CAACgC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACR,SAAS,GAAGS,CAAC,CAACT,SAAS,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;EAAE;;;uBAzB7E5B,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAsC,OAAA,EAAZtC,YAAY,CAAAuC,IAAA;MAAAC,UAAA,EADC;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}