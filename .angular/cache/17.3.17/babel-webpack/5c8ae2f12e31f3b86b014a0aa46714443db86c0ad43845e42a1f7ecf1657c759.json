{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class ToastService {\n  constructor() {\n    this.bus = new Subject();\n    this.stream$ = this.bus.asObservable();\n  }\n  show(kind, text, timeout = environment.toast.autoHideMs) {\n    const id = `${Date.now()}_${Math.random().toString(36).slice(2, 7)}`;\n    this.bus.next({\n      id,\n      kind,\n      text,\n      timeout\n    });\n  }\n  success(t, ms) {\n    this.show('success', t, ms);\n  }\n  error(t, ms) {\n    this.show('error', t, ms);\n  }\n  warn(t, ms) {\n    this.show('warning', t, ms);\n  }\n  info(t, ms) {\n    this.show('info', t, ms);\n  }\n  static {\n    this.ɵfac = function ToastService_Factory(t) {\n      return new (t || ToastService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ToastService,\n      factory: ToastService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Subject","environment","ToastService","constructor","bus","stream$","asObservable","show","kind","text","timeout","toast","autoHideMs","id","Date","now","Math","random","toString","slice","next","success","t","ms","error","warn","info","factory","ɵfac","providedIn"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\services\\toast.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport type ToastKind = 'success' | 'error' | 'warning' | 'info';\r\n\r\nexport interface Toast {\r\n    id: string;\r\n    kind: ToastKind;\r\n    text: string;\r\n    timeout?: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n    private bus = new Subject<Toast>();\r\n    stream$ = this.bus.asObservable();\r\n\r\n    show(kind: ToastKind, text: string, timeout = environment.toast.autoHideMs) {\r\n        const id = `${Date.now()}_${Math.random().toString(36).slice(2,7)}`;\r\n        this.bus.next({ id, kind, text, timeout });\r\n    }\r\n    success(t: string, ms?: number) { this.show('success', t, ms); }\r\n    error(t: string, ms?: number)   { this.show('error', t, ms); }\r\n    warn(t: string, ms?: number)    { this.show('warning', t, ms); }\r\n    info(t: string, ms?: number)    { this.show('info', t, ms); }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,WAAW,QAAQ,gCAAgC;;AAY5D,OAAM,MAAOC,YAAY;EADzBC,YAAA;IAEY,KAAAC,GAAG,GAAG,IAAIJ,OAAO,EAAS;IAClC,KAAAK,OAAO,GAAG,IAAI,CAACD,GAAG,CAACE,YAAY,EAAE;;EAEjCC,IAAIA,CAACC,IAAe,EAAEC,IAAY,EAAEC,OAAO,GAAGT,WAAW,CAACU,KAAK,CAACC,UAAU;IACtE,MAAMC,EAAE,GAAG,GAAGC,IAAI,CAACC,GAAG,EAAE,IAAIC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE;IACnE,IAAI,CAACf,GAAG,CAACgB,IAAI,CAAC;MAAEP,EAAE;MAAEL,IAAI;MAAEC,IAAI;MAAEC;IAAO,CAAE,CAAC;EAC9C;EACAW,OAAOA,CAACC,CAAS,EAAEC,EAAW;IAAI,IAAI,CAAChB,IAAI,CAAC,SAAS,EAAEe,CAAC,EAAEC,EAAE,CAAC;EAAE;EAC/DC,KAAKA,CAACF,CAAS,EAAEC,EAAW;IAAM,IAAI,CAAChB,IAAI,CAAC,OAAO,EAAEe,CAAC,EAAEC,EAAE,CAAC;EAAE;EAC7DE,IAAIA,CAACH,CAAS,EAAEC,EAAW;IAAO,IAAI,CAAChB,IAAI,CAAC,SAAS,EAAEe,CAAC,EAAEC,EAAE,CAAC;EAAE;EAC/DG,IAAIA,CAACJ,CAAS,EAAEC,EAAW;IAAO,IAAI,CAAChB,IAAI,CAAC,MAAM,EAAEe,CAAC,EAAEC,EAAE,CAAC;EAAE;;;uBAXnDrB,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EADC;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}