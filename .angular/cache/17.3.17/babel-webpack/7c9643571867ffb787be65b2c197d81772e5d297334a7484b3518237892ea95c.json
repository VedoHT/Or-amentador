{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.KEY = 'wizard_auth_user';\n  }\n  get currentUser() {\n    const raw = localStorage.getItem(this.KEY);\n    return raw ? JSON.parse(raw) : null;\n  }\n  isLoggedIn() {\n    return !!this.currentUser;\n  }\n  // ðŸ‘‡ aceite o codigoUsuario numÃ©rico vindo do back\n  login(identifier, _kind = 'otp', codigoUsuario) {\n    if (typeof codigoUsuario !== 'number') {\n      // se nÃ£o veio, deixe null (login anÃ´nimo nÃ£o deve salvar id)\n      localStorage.setItem(this.KEY, JSON.stringify({\n        id: null,\n        email: identifier\n      }));\n      return;\n    }\n    localStorage.setItem(this.KEY, JSON.stringify({\n      id: codigoUsuario,\n      email: identifier\n    }));\n  }\n  logoutLocal() {\n    localStorage.removeItem(this.KEY);\n  }\n  getUserId() {\n    const u = this.currentUser;\n    return u && typeof u.id === 'number' ? u.id : null;\n  }\n  static {\n    this.Éµfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: AuthService,\n      factory: AuthService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","KEY","currentUser","raw","localStorage","getItem","JSON","parse","isLoggedIn","login","identifier","_kind","codigoUsuario","setItem","stringify","id","email","logoutLocal","removeItem","getUserId","u","factory","Éµfac","providedIn"],"sources":["G:\\Estudos\\Angular\\Orcamentador\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\nexport interface User {\r\n    id: number;          // ðŸ‘ˆ nÃºmero\r\n    email: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    private KEY = 'wizard_auth_user';\r\n\r\n    get currentUser(): User | null {\r\n        const raw = localStorage.getItem(this.KEY);\r\n        return raw ? JSON.parse(raw) as User : null;\r\n    }\r\n\r\n    isLoggedIn(): boolean { return !!this.currentUser; }\r\n\r\n    // ðŸ‘‡ aceite o codigoUsuario numÃ©rico vindo do back\r\n    login(identifier: string, _kind: 'otp' | 'password' = 'otp', codigoUsuario?: number) {\r\n        if (typeof codigoUsuario !== 'number') {\r\n            // se nÃ£o veio, deixe null (login anÃ´nimo nÃ£o deve salvar id)\r\n            localStorage.setItem(this.KEY, JSON.stringify({ id: null, email: identifier }));\r\n            return;\r\n        }\r\n        localStorage.setItem(this.KEY, JSON.stringify({ id: codigoUsuario, email: identifier }));\r\n    }\r\n\r\n    logoutLocal() { localStorage.removeItem(this.KEY); }\r\n\r\n    getUserId(): number | null {\r\n        const u = this.currentUser;\r\n        return (u && typeof u.id === 'number') ? u.id : null;\r\n    }\r\n}\r\n"],"mappings":";AAQA,OAAM,MAAOA,WAAW;EADxBC,YAAA;IAEY,KAAAC,GAAG,GAAG,kBAAkB;;EAEhC,IAAIC,WAAWA,CAAA;IACX,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACJ,GAAG,CAAC;IAC1C,OAAOE,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAS,GAAG,IAAI;EAC/C;EAEAK,UAAUA,CAAA;IAAc,OAAO,CAAC,CAAC,IAAI,CAACN,WAAW;EAAE;EAEnD;EACAO,KAAKA,CAACC,UAAkB,EAAEC,KAAA,GAA4B,KAAK,EAAEC,aAAsB;IAC/E,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE;MACnC;MACAR,YAAY,CAACS,OAAO,CAAC,IAAI,CAACZ,GAAG,EAAEK,IAAI,CAACQ,SAAS,CAAC;QAAEC,EAAE,EAAE,IAAI;QAAEC,KAAK,EAAEN;MAAU,CAAE,CAAC,CAAC;MAC/E;IACJ;IACAN,YAAY,CAACS,OAAO,CAAC,IAAI,CAACZ,GAAG,EAAEK,IAAI,CAACQ,SAAS,CAAC;MAAEC,EAAE,EAAEH,aAAa;MAAEI,KAAK,EAAEN;IAAU,CAAE,CAAC,CAAC;EAC5F;EAEAO,WAAWA,CAAA;IAAKb,YAAY,CAACc,UAAU,CAAC,IAAI,CAACjB,GAAG,CAAC;EAAE;EAEnDkB,SAASA,CAAA;IACL,MAAMC,CAAC,GAAG,IAAI,CAAClB,WAAW;IAC1B,OAAQkB,CAAC,IAAI,OAAOA,CAAC,CAACL,EAAE,KAAK,QAAQ,GAAIK,CAAC,CAACL,EAAE,GAAG,IAAI;EACxD;;;uBAzBShB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}